// html font-size forcée à 10px par BT
html {
  font-size: $font-size-root;
  // Orange brand All is bold only plain texts are not bold
  font-weight: $brand-font-weight-normal;
}

//
// Caret
// --------------------------------------------------
// Fix the border-top style to display caret onto IE8
.caret {
  border-top-style: solid;
}

//
// Alerts
// --------------------------------------------------
.alert {
  border-width: 2px;
}

//
// Labels
// --------------------------------------------------

.label {
  border-radius: $border-radius-base;
}

.table label.o-checkbox,
.table label.o-radio {
  margin-bottom: 0;
}

//
// Navbar
//

.navbar {
    padding: 0;

    &.navbar-light,
    &.navbar-dark {
        background: $brand-orange-black;
    }

    .nav-item {
        font-weight: $brand-font-weight-bold;

        .nav-link {
            margin-top: 2.8rem;
            padding: 1rem;
            padding-bottom: 0;
        }

        .dropdown-toggle {
            @include hover-focus {
                color: $brand-orange;
            }
            display: block;
            margin-top: 2.8rem;
            padding: 1rem;
            padding-bottom: 0;
            color: $brand-orange-white;
        }
    }

    .form-inline {
        margin-top: 1.8rem;
        margin-left: 1rem;
    }

    .btn-inverse-outline {
        @include hover-focus{
            color: $brand-orange;
            border-color: $brand-orange;
        }

        @include active {
            color: $brand-orange-white;
            background-color: $brand-orange;
            border-color: $brand-orange;
        }

        color: $brand-orange-white;
        background-color: $brand-orange-black;
        border-color: $brand-orange-white;
    }
}

.navbar-toggler {
  @include navbar-toggle-vertical-align($navbar-toggle-vertical-margin);
  // position: relative;
  // float: right;
  padding: $nav-link-padding;
  margin-right: $navbar-padding-horizontal;
  background-color: transparent;
  background-image: none;
  border: 1px solid transparent;
  border-radius: $border-radius-base;

  @include hover-focus {
    background-color: $brand-orange;
  }

  // We remove the `outline` here, but later compensate by attaching `:hover`
  // styles to `:focus`.
  &:focus {
    outline: 0;
  }

  // Bars
  .icon-bar {
    display: block;
    width: 22px;
    height: 2px;
    border-radius: 1px;
  }

  .icon-bar + .icon-bar {
    margin-top: 4px;
  }

  @media (min-width: $grid-float-breakpoint) {
    display: none;
  }
}

.navbar-brand {
  height: $navbar-height;
  margin: 0;
  padding: 1rem;

  &.nav-link {
    margin: 0;
  }

  img {
    color: $brand-orange-white;
    font-size: 1.2rem;
    font-weight: $brand-font-weight-normal;
  }
}

.navbar-header {
  padding-right: $navbar-padding-horizontal;
  padding-left: $navbar-padding-horizontal;
}

.navbar-toggle-complement {
  position: relative;
  float: right;
}

.navbar-toggle-complement .navbar-nav {
  margin: $padding-base-vertical 0 0;
}

.navbar-toggle-complement li {
  float: left;
}

@media (min-width: $screen-sm) {
  .navbar-toggle-complement {
    display: none;
  }
}

// Navbar nav links
//
// Builds on top of the `.nav` components with its own modifier class to make
// the nav the full height of the horizontal nav (above 768px).
.navbar-nav {
  #uci_link {
    color: $brand-orange-white;
    font-weight: $brand-font-weight-bold;
    margin-top: 2.8rem;
    margin-left: 1rem;
    padding: 1rem;
    float: left;

    @include hover-focus{
      color: $brand-orange;
    }
  }
  // Uncollapse the nav
  @media (min-width: $grid-float-breakpoint) {
      .nav-link {
        // @include navbar-vertical-align($navbar-padding-vertical + $line-height-computed);
        margin-top: 2.8rem;
      }
  }

  > li {
    > a {
      font-size: $navbar-font-size;
    }
  }
}

.nav {
  // Open dropdowns
  .open > a {
    &,
    &:hover,
    &:focus {
      color: $brand-orange-white;
    }
  }
}

// back from accessibility plugin css
div.active:focus {
  outline: dotted 1px $brand-orange-black;
}

a:focus {
  outline: dotted 1px $brand-orange-black;
}

.close:hover,
.close:focus {
  outline: dotted 1px $brand-orange-black;
}

//
// Progress bar
//

.progress.progress-default{
    &[value]::-webkit-progress-value {
        background-color: $brand-orange;
    }

    &[value]::-moz-progress-bar {
    background-color: $brand-orange;
  }
}



//
// Carousel
// --------------------------------------------------

.carousel {
  margin-bottom: 3rem;
}

.carousel .carousel-control {
  top: auto;
  bottom: calc(50% - 3rem);
  width: 6rem;
  height: 6rem;
  padding-top: 1.5rem;
  text-shadow: none;
  background-color: $brand-orange-white;
  opacity: .8;
  transition: width .5s ease;

  &.left,
  &.right {
    background-image: none;
    background-repeat: no-repeat;

    &:hover,
    &:focus {
      width: 12rem;
    }
  }

  .glyphicon {
    position: relative;
    top: auto;
    margin: auto;
    color: $brand-orange;
    text-shadow: none;
  }

  .glyphicon-chevron-left {
    left: auto;
  }

  .glyphicon-chevron-right {
    right: auto;
  }
}

.carousel-indicators {
  bottom: -3rem;

  &:hover {
    cursor: default;
  }

  li {
    width: 1.6rem;
    height: .4rem;
    margin: 0 .4rem;
    background-color: $gray-light-plus;
    border: 0;
    border-radius: 0;

    &:hover {
      cursor: pointer;
      background-color: $brand-orange;
    }

    &.active {
      width: 1.6rem;
      height: .4rem;
      margin: 0 .4rem;
      background-color: $brand-orange;
    }
  }
}

//
// Forms control into input groups
//
.input-group > .form-control {
  border-color: $brand-orange-black;

  &:focus {
    border-color: $brand-orange;
  }
}

.has-success {
  .input-group > .form-control {
    // Feedback states
    border-color: $state-success-text;
  }
}

.has-error {
  .input-group > .form-control {
    // Feedback states
    border-color: $state-danger-text;
  }
}

.has-warning {
  .input-group > .form-control {
    // Feedback states
    border-color: $state-warning-text;
  }
}

// Force the color for Heading into thumbnails
.thumbnail {
  // Image captions
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  .h1,
  .h2,
  .h3,
  .h4,
  .h5,
  .h6 {
    color: $thumbnail-caption-color;
  }
}

// Panel, put a display block on header links for accordions full width click area
.panel-title {
  > a,
  > small > a,
  > .small > a {
    display: block;
  }
}

.o-footer,
.o-footer-inverse {
  padding: $navbar-padding-vertical;
}

.hero-container .frame {
  position: absolute;
  top: 0;
  left: 0;
  max-width: 15%;
  margin: ($grid-gutter-width + 1rem);
}

.hero-container .caption {
  margin: 5rem ($grid-gutter-width + 1rem);
}

.hero-container .category {
  font-size: 2rem;
  color: $brand-orange;
}

// Orange - July 2015

// Recommended @font-face snippet for web fonts

@font-face{
	font-family: 'HelvNeue75';
  font-style: normal;
  font-weight: 700;
	src: url('#{$icon-font-path}HelvNeue75_W1G.eot') format('eot'),
  url('#{$icon-font-path}HelvNeue75_W1G.woff2') format('woff2'),
	url('#{$icon-font-path}HelvNeue75_W1G.woff') format('woff'),
	url('#{$icon-font-path}HelvNeue75_W1G.ttf') format('truetype'),
	url('#{$icon-font-path}HelvNeue75_W1G.svg') format('svg');
}
@font-face{
	font-family: 'HelvNeue55';
  font-style: normal;
  font-weight: 400;
  src: url('#{$icon-font-path}HelvNeue55_W1G.eot') format('eot'),
  url('#{$icon-font-path}HelvNeue55_W1G.woff2') format('woff2'),
	url('#{$icon-font-path}HelvNeue55_W1G.woff') format('woff'),
	url('#{$icon-font-path}HelvNeue55_W1G.ttf') format('truetype'),
	url('#{$icon-font-path}HelvNeue55_W1G.svg') format('svg');
}

// == TABLES
.table {
  // Cells
  > thead,
  > tbody,
  > tfoot {
    > tr {
      > th,
      > td {
        // Remove border top and put border-botom
        border-top: 0;
        border-bottom: 1px solid $table-border-color;
      }

      > th {
          font-size: $font-size-h5;
      }
    }
  }

  > thead th {
      border-bottom: 2px;
  }

}

@include table-row-variant-border(success, $state-success-border);
@include table-row-variant-border(info, $state-info-border);
@include table-row-variant-border(warning, $state-warning-border);
@include table-row-variant-border(danger, $state-danger-border);


// force caption for tables
caption {
	background-color: $brand-orange-white;
	color: $brand-orange-black;
	padding: $padding-large-vertical 0;
  font-size: $font-size-h1;
	font-weight: bold;
  caption-side: top;
}

// Force bold onto panel heading and footer and wells
.panel-heading,
.panel-footer,
.well {
  font-weight: bold;
}

//
// buttons orange specific variants
//

// Alternate buttons
// --------------------------------------------------

@mixin button-variant-orange($color, $background, $border, $hover-bg-color:darken($background, 10%), $active-bg-color:darken($background, 20%), $hover-color:$color, $active-color:$color) {
  color: $color;
  background-color: $background;
  border-color: $border;

  &:hover,
  &.hover,
  .open > .dropdown-toggle & {
    color: $hover-color;
    background-color: $hover-bg-color;
        border-color: $hover-bg-color;
  }

  &:focus,
  &.focus,
  &:active,
  &.active {
    color: $active-color;
    background-color: $active-bg-color;
    border-color: $active-bg-color;
  }

  &:active,
  &.active,
  .open > .dropdown-toggle & {
    background-image: none;
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &.focus,
    &:active,
    &.active {
      background-color: $background;
          border-color: $border;
    }
  }

  .badge {
    color: $background;
    background-color: $color;
  }
}

.btn-default {
  @include button-variant-orange($btn-default-color, $btn-default-bg, $btn-default-border, $btn-default-color, $btn-primary-bg, $btn-default-bg, $btn-default-bg);
}

.btn-primary {
  @include button-variant-orange($btn-primary-color, $btn-primary-bg, $btn-primary-border);
}
// Success appears as green
.btn-success {
  @include button-variant-orange($btn-success-color, $btn-success-bg, $btn-success-border, darken($btn-success-bg, 10%), darken($btn-success-bg, 20%), $btn-success-color, $btn-default-color);
}
// Info appears as blue-green
.btn-info {
  @include button-variant-orange($btn-info-color, $btn-info-bg, $btn-info-border, $btn-info-hover-bg, $btn-info-active-bg);
}
// Warning appears as orange
.btn-warning {
  @include button-variant-orange($btn-warning-color, $btn-warning-bg, $btn-warning-border);
}
// Danger and error appear as red
.btn-danger {
  @include button-variant-orange($btn-danger-color, $btn-danger-bg, $btn-danger-border);
}

.btn {
  border-width: 2px;

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    opacity: .2;
  }
}

.form-group {
    .control-label {
        font-weight: $brand-font-weight-bold;
    }
}

.form-control {
  height: $input-height;
  border-width: 2px;
}

//
// Cards
//

.card {
    border-color: $brand-orange-black;

    .card-block {
        background-color: $brand-orange-black;
        color: white;
    }
}

// bits from bootstrap-orange2015.less

a {
  color: $link-color;
  text-decoration: underline;

  &:hover,
  &:focus {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
  }

  &:focus {
    @include tab-focus();
  }
}

nav a,
.dropdown-menu a,
.dropdown a,
.navbar a,
.nav a,
a.btn {
  text-decoration: none;
}

// Horizontal forms
//
// Horizontal forms are built on grid classes and allow you to create forms with
// labels on the left and inputs on the right.

.form-horizontal {
  // Reset spacing and right align labels, but scope to media queries so that
  // labels on narrow viewports stack the same as a default form example.
  @media (min-width: $screen-sm-min) {
      .control-label {
        padding-top: ($padding-base-vertical + .1); // Default padding plus a border
      }
  }

  // Form group sizes
  //
  // Quick utility class for applying `.input-lg` and `.input-sm` styles to the
  // inputs and labels within a `.form-group`.
  .form-group-lg {
    @media (min-width: $screen-sm-min) {
      .control-label {
        padding-top: (($padding-large-vertical * $line-height-large) + .1);
      }
    }
  }

  .form-group-sm {
    @media (min-width: $screen-sm-min) {
      .control-label {
        padding-top: ($padding-small-vertical + .1);
      }
    }
  }

  .control-label {
    text-align: left;
  }
}

// Reposition feedback icon if input has visible label above
.has-feedback label {
  ~ .form-control-feedback {
    top: ($line-height + .5); // Height of the `label` and its margin
  }
}
